package mx.conacyt.crip.ms.proyectos.domain;

import java.io.Serializable;
import java.time.Instant;
import java.util.List;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.Field;

import lombok.Getter;
import lombok.Setter;
import mx.conacyt.crip.ms.proyectos.domain.Mensaje;

/**
 * A <%=entity.name.pascalCase%>.
 */
@Getter
@Setter
@Document(collection = "<%=entity.name.plural%>")
public class <%=entity.name.pascalCase%> implements Serializable {

  private static final long serialVersionUID = 1L;

  @Id
  private String id;


  <%_ entity.properties.forEach(property => { _%>
  @Field("<%= property.snakeCase%>")
  <%_ if (property.multiplicidad === 'one') { _%>
  private <%= property.backEndType%> <%= property.camelCase%>;
  <%_ } else { _%>
  private List<<%= property.backEndType%>> <%= property.camelCase%>;
  <%_ } _%>

  <%_ }); _%>
  @Field("estatus")
  private String estatus;

  @Field("etapa")
  private String etapa;

  private List<Mensaje> mensajes;

  // jhipster-needle-entity-add-field - JHipster will add fields here

  <%_ entity.properties.forEach(property => { _%>
    <%_ if (property.multiplicidad === 'one') { _%>
    public <%= entity.name.pascalCase%> <%= property.camelCase%>(<%= property.backEndType%> <%= property.camelCase%>) {
      this.set<%= property.pascalCase%>(<%= property.camelCase%>);
      return this;
    }
    <%_ } else { _%>
    public <%= entity.name.pascalCase%> <%= property.camelCase%>(List<<%= property.backEndType%>> <%= property.camelCase%>) {
      this.set<%= property.pascalCase%>(<%= property.camelCase%>);
      return this;
    }
    <%_ } _%>
    <%_ }); _%>


  // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here

  @Override
  public boolean equals(Object o) {
      if (this == o) {
          return true;
      }
      if (!(o instanceof <%=entity.name.pascalCase%>)) {
          return false;
      }
      return id != null && id.equals(((<%=entity.name.pascalCase%>) o).id);
  }

  @Override
  public int hashCode() {
      // see https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
      return getClass().hashCode();
  }

  // prettier-ignore
  @Override
  public String toString() {
      return "<%=entity.name.pascalCase%>{" +
          "id=" + getId() +
          <%_ entity.properties.forEach(property => { _%>
            ", <%= property.camelCase%>='" + get<%= property.pascalCase%>() + "'" +
            <%_ }); _%>
          "}";
  }
}
